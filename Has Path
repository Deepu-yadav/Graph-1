mport java.util.Scanner;
import java.util.*;
public class Solution {

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int V = s.nextInt();
        int E = s.nextInt();
        int edges[][]=new int[V][V];
        for(int i=0;i<E;i++){
            int sv=s.nextInt();
            int ev=s.nextInt();
            edges[sv][ev]=1;
            edges[ev][sv]=1;
        }
        int V1=s.nextInt();
        int V2=s.nextInt();
        
        boolean ans=solve(edges,V1,V2);
        System.out.println(ans);
    }
    public static boolean solve(int[][] adj, int start, int end) {
        boolean[] visited = new boolean[adj.length];
     //   Arrays.fill(visited, false);
        visited[start] = true;

        Queue<Integer> queue = new LinkedList<Integer>();
        queue.add(start);

        while (!queue.isEmpty()) {
            int current = queue.poll();
            for (int i = 0; i < adj.length; i++) {
                if (adj[current][i] == 1 && !visited[i]) {
                    if (i == end) {
                        return true;
                    }
                    visited[i] = true;
                    queue.add(i);
                }
            }
        }
        return false;
    }
}
