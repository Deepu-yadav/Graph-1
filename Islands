public class Solution {

	public static int numConnected(int[][] edges, int n) {
        
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
	 	 * Taking input and printing output is handled automatically.
        */

		if(n==0){
			return 0;
		}
         return  Help(edges,0);

	}
	public static int Help(int[][]edges,int ans){
		boolean visited[]=new boolean[edges.length]; 
// connected and dissconnected graph both are combine inside the adges matrix 

		for(int i=0; i<edges.length; i++){
			if(!visited[i]){
             ans=ans+1;
           		dft(edges, visited, i);
			}
		}
		return ans;         
		
	}
	public static void dft(int[][]edges,boolean visited[],int start){
                visited[start]=true;
                    
				for(int i=0; i<edges.length; i++){
                        if(!visited[i] && edges[start][i]==1){
							dft(edges, visited, i);
						}
				}
	}

}
